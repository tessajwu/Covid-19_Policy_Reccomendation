{
	"name": "dfGeography",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "VMSQLCountries",
						"type": "DatasetReference"
					},
					"name": "SQLVMCountries"
				},
				{
					"dataset": {
						"referenceName": "ASQLCountries",
						"type": "DatasetReference"
					},
					"name": "ASQLCountry"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "destGeography",
						"type": "DatasetReference"
					},
					"name": "destGeography"
				}
			],
			"transformations": [
				{
					"name": "JoinSQLCountries"
				},
				{
					"name": "SQLCountryOutput"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Country as string,",
				"          CountryCode as string,",
				"          Latitude as decimal(10,5),",
				"          Longitude as decimal(10,5)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> SQLVMCountries",
				"source(output(",
				"          Country as string,",
				"          CountryCode as string,",
				"          Latitude as decimal(10,5),",
				"          Longitude as decimal(10,5)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> ASQLCountry",
				"SQLVMCountries, ASQLCountry join(SQLVMCountries@Country == ASQLCountry@Country,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinSQLCountries",
				"JoinSQLCountries select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SQLCountryOutput",
				"SQLCountryOutput sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> destGeography"
			]
		}
	}
}